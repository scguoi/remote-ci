name: Build and Push Simple Test

on:
  push:
    branches:
      - main
  workflow_dispatch:

concurrency:
  group: build-push-simple-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  packages: write

env:
  REGISTRY_GHCR: ghcr.io

jobs:
  # ============================================================================
  # Simple Go Service Build - For Testing
  # ============================================================================
  build-go-test:
    name: üêπ Test Go Service Build
    runs-on: ubuntu-latest
    if: contains(github.event.head_commit.message, 'test-build') || github.event_name == 'workflow_dispatch'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY_GHCR }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.REGISTRY_GHCR }}/${{ github.repository }}-go
          tags: |
            type=ref,event=branch
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Go image
        uses: docker/build-push-action@v5
        with:
          context: backend-go
          platforms: linux/amd64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            VERSION=test
            GIT_COMMIT=${{ github.sha }}
            BUILD_TIME=${{ github.run_id }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Test result
        run: |
          echo "üéâ Go Docker image built and pushed successfully!"
          echo "üì¶ Image: ${{ env.REGISTRY_GHCR }}/${{ github.repository }}-go:latest"
          echo "üîç You can now pull and test: docker pull ${{ env.REGISTRY_GHCR }}/${{ github.repository }}-go:latest"